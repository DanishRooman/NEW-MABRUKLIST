@model DataTransferObjects.Types.TypeDto
@Scripts.Render("~/Script/unobtrusive")

<div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
        @using (Ajax.BeginForm("AddOrUpdateType", "Type", new AjaxOptions { OnSuccess = "Type.initTypeSuccess" }))
        {
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add New Type</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.HiddenFor(model => model.id)
                                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        }
    </div>

</div>
