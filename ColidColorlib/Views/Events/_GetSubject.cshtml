@model DataTransferObjects.Event.EventSubjectDTO


<div class="modal-dialog">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Update Subject</h4>
        </div>
        @using (Ajax.BeginForm("UpdateSubject", "Events", new AjaxOptions { OnSuccess = "Event.initSubjectUpdated" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group hide">
                        @Html.LabelFor(model => model.EventId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EventId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EventSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EventSubject, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EventSubject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>

        }

    </div>
</div>