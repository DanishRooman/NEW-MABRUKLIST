@model DataTransferObjects.Event.EventDTO
@Styles.Render("~/Content/summernote")
@Scripts.Render("~/Script/MomentDatepickar")
@{
    ViewBag.Title = "AddEvent";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@*<h2 class="text-center font-bold pt-4 pb-5 mb-5"><strong>Registration form with steps</strong></h2>*@
<div class="container">

    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4>Add Events</h4>
                    <input type="hidden" value="0" class="txtEventId" />
                </div>
                <div class="panel-body">
                    <br />
                    <!-- Stepper -->
                    <div class="steps-form-2">
                        <div class="steps-row-2 setup-panel-2 d-flex justify-content-between">
                            <div class="steps-step-2">
                                <a href="#step-1" type="button" class="btn btn-amber btn-circle-2 waves-effect ml-0" data-toggle="tooltip" data-placement="top" title="Event Details"><i class="fa fa-calendar" aria-hidden="true"></i></a>
                                <h5>Create Event</h5>
                            </div>
                            <div class="steps-step-2">
                                <a href="#step-2" id="linkStep_2" type="button" class="btn btn-blue-grey btn-circle-2 waves-effect" data-toggle="tooltip" data-placement="top" title="Choose Contacts"><i class="fa fa-user" aria-hidden="true"></i></a>
                                <h5>Choose Contacts</h5>
                            </div>
                            <div class="steps-step-2">
                                <a href="#step-3" id="linkStep_3" type="button" class="btn btn-blue-grey btn-circle-2 waves-effect" data-toggle="tooltip" data-placement="top" title="Verify Contacts"><i class="fa fa-check" aria-hidden="true"></i></a>
                                <h5>Verify Contacts</h5>
                            </div>
                            <div class="steps-step-2">
                                <a href="#step-4" id="linkStep_4" type="button" class="btn btn-blue-grey btn-circle-2 waves-effect mr-0" data-toggle="tooltip" data-placement="top" title="Create sub-event"><i class="fa fa-clock-o" aria-hidden="true"></i></a>
                                <h5>Create Sub-event</h5>
                            </div>
                            <div class="steps-step-2">
                                <a href="#step-5" id="linkStep_5" type="button" class="btn btn-blue-grey btn-circle-2 waves-effect mr-0" data-toggle="tooltip" data-placement="top" title="Sub Events Detail"><i class="fa fa-align-justify" aria-hidden="true"></i></a>
                                <h5>Sub Events</h5>
                            </div>
                            <div class="steps-step-2">
                                <a href="#step-6" id="linkStep_6" type="button" class="btn btn-blue-grey btn-circle-2 waves-effect mr-0" data-toggle="tooltip" data-placement="top" title="Create sub-event"><i class="fa fa-envelope" aria-hidden="true"></i></a>
                                <h5>Send Invitations</h5>
                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="row setup-content-2" id="step-1">
                        <div class="col-md-12">
                            @*<h3 class="font-weight-bold pl-0 my-4"><strong>Basic Information</strong></h3>*@
                            <!--try-->
                            <div clasa="container">

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="panel">

                                            <div class="panel-body">
                                                <br />
                                                @using (Ajax.BeginForm("AddOrUpdateEvents", "Events", new AjaxOptions { OnSuccess = "Event.initCreateEvent", HttpMethod = "POST" }))
                                                {

                                                    <div class="form-horizontal">

                                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                        @Html.HiddenFor(model => model.id, new { @class = "txtEventId" })
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.DropDownListFor(model => model.Category, new SelectList(Model.eventCategoryList, "id", "Category"), "---Select Category---", new { @class = "form-control select2" })
                                                                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.EventFor, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.DropDownListFor(model => model.EventFor, new SelectList(Model.eventTypesList, "id", "Type"), "---Select Types---", new { @class = "form-control select2" })
                                                                @Html.ValidationMessageFor(model => model.EventFor, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <br />
                                                        @*<div class="form-group">
                                                                @Html.LabelFor(model => model.hour, htmlAttributes: new { @class = "control-label col-md-1" })
                                                                <div class="col-md-11">
                                                                    @Html.EditorFor(model => model.hour, new { htmlAttributes = new { @class = "form-control timepicker" } })
                                                                    @Html.ValidationMessageFor(model => model.hour, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>*@
                                                        <br />
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-1" })
                                                            <div class="col-md-11">
                                                                @Html.TextAreaFor(model => model.Comment, 15, 110, new { @class = "form-control", @id = "txtDescription" })
                                                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-12" style="text-align:right;">
                                                                @Html.ActionLink("Previous", "Index", "Events", new { @class = "btn btn-success" })
                                                                <input type="submit" value="Save" class="btn btn-primary" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*<button class="btn btn-mdb-color btn-rounded nextBtn-2 float-right" type="button">Next</button>*@
                        </div>
                    </div>


                    <!-- Second Step -->
                    <div class="row setup-content-2" id="step-2">

                    </div>

                    <!-- Third Step -->
                    <div class="row setup-content-2" id="step-3">

                    </div>

                    <!-- Fourth Step -->
                    <div class="row setup-content-2" id="step-4">
                        <div class="col-md-12">
                            <div clasa="container">
                                <div class="row">
                                    <div class="col-md-12">
                                        <br />
                                        @using (Ajax.BeginForm("AddSubevent", "Events", new AjaxOptions { OnSuccess = "Event.initCreateSubEvent" }))
                                        {
                                            <div class="form-horizontal">

                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.id, new { @class = "txtEventId" })

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.Category, new SelectList(Model.eventCategoryList, "id", "Category"), "---Select Category---", new { @class = "form-control select2" })
                                                        @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                                                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.EventFor, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.DropDownListFor(model => model.EventFor, new SelectList(Model.eventTypesList, "id", "Type"), "---Select Types---", new { @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.EventFor, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br />


                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-10">
                                                        @Html.TextAreaFor(model => model.Comment, 5, 131, new { @class = "form-control", @id = "txtSubEventDescription" })
                                                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12" style="text-align:right;">
                                                        @Html.ActionLink("Previous", "Index", "Events", new { @class = "btn btn-success" })
                                                        <input type="submit" value="Save" class="btn btn-primary" />
                                                    </div>
                                                </div>

                                            </div>
                                        }


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <!-- Fifth Step -->
                    <div class="row setup-content-2" id="step-5">

                    </div>

                    <!-- Sixth Step -->
                    <div class="row setup-content-2" id="step-6">
                        <div class="col-md-12">
                            <br />
                            <button type="button" class="btn btn-primary" onclick="Event.initInvitationTemplates();">Select Template</button>
                            <button type="button" class="btn btn-danger" onclick="Event.initSetColors();">Select Colors</button>
                            <button type="button" class="btn btn-warning" onclick="Event.initInvitationTemplates();">Set Subject</button>
                            <button class="btn btn-success" onclick="Event.initSendEmail()" type="button">Send Invitations</button>
                        </div>
                        <br />
                        <hr />
                        <div id="templateArea">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="templatesModal" class="modal fade" role="dialog">
</div>


<div id="setColorsModal" class="modal fade" role="dialog">
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/summernote")
    @Scripts.Render("~/Script/steps")
    @Scripts.Render("~/Script/Events")
}


<script type="text/javascript">
    $(function () {
        $("#txtDescription").summernote({
            height: 200
        });

        $("#txtSubEventDescription").summernote({
            height: 200
        });
        $('.datepicker ').datetimepicker();
    });
</script>



